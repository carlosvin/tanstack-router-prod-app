{"version":3,"file":"books-DfBFp6As.js","sources":["../../src/routes/books.tsx?tsr-split=errorComponent"],"sourcesContent":["import { createFileRoute, Outlet } from \"@tanstack/react-router\"\nimport { BookEntry } from \"@/components/BookEntry\"\nimport { PaginatorButtons } from \"@/components/Paginator\"\nimport { Search } from \"@/components/Search\"\nimport { BookSchemaRequest } from \"@/schemas/bookRequest\"\nimport { fetchBooks } from \"@/services/api/books\"\n\nexport const Route = createFileRoute(\"/books\")({\n  validateSearch: BookSchemaRequest,\n  loaderDeps: ({ search: { search, page } }) => ({ search, page }),\n  loader: async ({ deps: { search, page } }) => fetchBooks({ search, page }),\n  component: App,\n  errorComponent: ({ error }) => (\n    <mark>\n      There was an error: <code>{error.message}</code>\n    </mark>\n  ),\n})\n\nfunction App() {\n  const { results, count } = Route.useLoaderData()\n  const { search, page } = Route.useSearch()\n  const navigate = Route.useNavigate()\n\n  function handlePageChange(page: number): void {\n    navigate({ search: (prev) => ({ ...prev, page }) })\n  }\n\n  return (\n    <>\n      <Search\n        onChange={(search) =>\n          navigate({ search: (prev) => ({ ...prev, search, page: 1 }) })\n        }\n        defaultValue={search}\n      />\n      <ol>\n        {results.map((book) => (\n          <li key={book.id}>\n            <BookEntry {...book} />\n          </li>\n        ))}\n      </ol>\n      <Outlet />\n      <PaginatorButtons\n        totalItems={count}\n        currentPage={page || 1}\n        perPage={32}\n        onPageChange={handlePageChange}\n      />\n    </>\n  )\n}\n"],"names":["SplitErrorComponent","error","jsx","message"],"mappings":"gDAYkBA,CAAC,CAAEC,MAAAA,CAAM,WACtB,OAAA,CAAI,SAAA,CAAA,uBACiBC,EAAAA,IAAC,OAAA,CAAMD,SAAAA,EAAME,OAAAA,CAAQ,CAAA,CAAA,CAC3C"}